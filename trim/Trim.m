%% Search for a specified operating point for the model - trimL410.
%
% This MATLAB script is the command line equivalent of the trim model
% tab in linear analysis tool with current specifications and options.
% It produces the exact same operating points as hitting the Trim button.

% MATLAB(R) file generated by MATLAB(R) 9.10 and Simulink Control Design (TM) 5.7.
%
% Generated on: 31-Aug-2022 15:44:17

%% Specify the model name
model = 'TrimPlane';

%% Create the operating point specification object.
opspec = operspec(model);
airspeed = 70;
Altitude = 1000;
%% Set the constraints on the states in the model.
% - The defaults for all states are Known = false, SteadyState = true,
%   Min = -Inf, Max = Inf, dxMin = -Inf, and dxMax = Inf.

% State (1) - trimL410/6DOF/6DOF (Quaternion)/Calculate DCM & Euler Angles/q0 q1 q2 q3
opspec.States(1).x = [1;0;0;0];
pspec.States(2).SteadyState = [false;false;false;false];

% State (2) - trimL410/6DOF/6DOF (Quaternion)/p,q,r
opspec.States(2).x = [plane.trim.BodyRate];
pspec.States(2).SteadyState = [false;false;false];

% State (3) - trimL410/6DOF/6DOF (Quaternion)/ub,vb,wb
opspec.States(3).x = [airspeed;0;0];

% State (4) - trimL410/6DOF/6DOF (Quaternion)/xe,ye,ze
% - Default model initial conditions are used to initialize optimization.
opspec.States(4).x = [0;0;-Altitude];
opspec.States(4).SteadyState = [false;false;true];

% State (5) - trimL410/Subsystem/Integrator
opspec.States(5).x = plane.trim.Engine_RPM;
opspec.States(5).Min = [1,1]*plane.powertrain.SpeedSat(2);
opspec.States(5).Max = [1,1]*plane.powertrain.SpeedSat(1);

% State (6) - trimL410/Subsystem/Integrator 1
opspec.States(6).x = plane.trim.Engine_Pitch;
opspec.States(6).Min = [1,1]*plane.powertrain.pitch(1);
opspec.States(6).Max = [1,1]*plane.powertrain.pitch(end);


% State (7) - trimL410/Subsystem1/Integrator
opspec.States(7).x = plane.trim.AileronL;
opspec.States(7).Min = plane.ailerons.DeflectionSat(2);
opspec.States(7).Max = plane.ailerons.DeflectionSat(1);

% State (8) - trimL410/Subsystem2/Integrator
opspec.States(8).x = plane.trim.Elevator;
opspec.States(8).Min = plane.elevator.DeflectionSat(2);
opspec.States(8).Max = plane.elevator.DeflectionSat(1);

% State (9) - trimL410/Subsystem3/Integrator
opspec.States(9).x = plane.trim.Rudder;
opspec.States(9).Min = plane.rudder.DeflectionSat(2);
opspec.States(9).Max = plane.rudder.DeflectionSat(1);

% State (10) - trimL410/Subsystem4/Integrator
opspec.States(10).x = plane.trim.AileronR;
opspec.States(10).Min = plane.ailerons.DeflectionSat(2);
opspec.States(10).Max = plane.ailerons.DeflectionSat(1);

%% Set the constraints on the outputs in the model.
% - The defaults for all outputs are Known = false, Min = -Inf, and
% Max = Inf.

% Output (1) - trimL410/Airspeed
opspec.Outputs(1).y = airspeed;
opspec.Outputs(1).Known = true;

% Output (2) - trimL410/Roll angle
% - Default model initial conditions are used to initialize optimization.
opspec.Outputs(2).y = deg2rad(0);
opspec.Outputs(2).Known = true;

% Output (3) - trimL410/Pitch angle
% - Default model initial conditions are used to initialize optimization.

% Output (4) - trimL410/Body rotational rates
% - Default model initial conditions are used to initialize optimization.

% Output (5) - trimL410/NED
% - Default model initial conditions are used to initialize optimization.
opspec.Outputs(5).Known = [false,false,false];
% Output (6) - trimL410/Height
% - Default model initial conditions are used to initialize optimization.
opspec.Outputs(6).y = Altitude;
opspec.Outputs(6).Known = true;
% Output (7) - trimL410/Heading
% - Default model initial conditions are used to initialize optimization.
opspec.Outputs(7).y = deg2rad(0);
opspec.Outputs(7).Known = true;
% Output (8) - trimL410/AoA
% - Default model initial conditions are used to initialize optimization.

% Output (9) - trimL410/AoS
% - Default model initial conditions are used to initialize optimization.
opspec.Outputs(9).Known = true;

% Output (10) - trimL410/F
% - Default model initial conditions are used to initialize optimization.
opspec.Outputs(10).Known = [true;true;true];

% Output (11) - trimL410/M
% - Default model initial conditions are used to initialize optimization.
opspec.Outputs(11).Known = [true;true;true];


%% Create the options
opt = findopOptions('DisplayReport','iter');
opt.OptimizationOptions.Algorithm = 'sqp';
opt.OptimizationOptions.MaxIter = 1e3;
%% Perform the operating point search.
[op,opreport] = findop(model,opspec,opt);

plane.trim.pitch = opreport.Outputs(3).y;
plane.trim.roll = opreport.Outputs(2).y;
plane.trim.BodyV = opreport.States(3).x;
plane.trim.BodyRate = opreport.States(2).x;
plane.trim.AileronL = opreport.States(7).x;
plane.trim.AileronR = opreport.States(10).x;
plane.trim.Elevator = opreport.States(8).x;
plane.trim.Rudder = opreport.States(9).x;
plane.trim.Engine_RPM = opreport.States(5).x;
plane.trim.Engine_Pitch = opreport.States(6).x;
plane.trim.height = opreport.Outputs(6).y;

